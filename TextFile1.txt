0 -> Interceptors encadeados (interceptor chamando interceptor..)
1 -> Fazer e testar fluxo para transiente e singleton
2 -> Dar suporte a injeção de dependência dentro do interceptor
3 -> Manipular retorno do interceptor
4 -> Criar interceptors nativos prontos para uso
5 -> Criar pipeline de interceptors
6 -> Verificar como se comportam parametros opcionais
7 -> Interceptor async

Feitos
0 -> Testar com namespaces e com parametros de classes customizadas, IEnumerable, etc..
X - Dar suporte a Task async



README

Este projeto é uma extensão do DI padrão do .NET a fim de prover interceptors. 

O que são interceptors?

São classes utilizadas para enxertar código antes e depois de execução de funções.



